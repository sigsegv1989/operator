apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: applicationlayers.operator.tigera.io
spec:
  group: operator.tigera.io
  names:
    kind: ApplicationLayer
    listKind: ApplicationLayerList
    plural: applicationlayers
    singular: applicationlayer
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ApplicationLayer is the Schema for the applicationlayers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationLayerSpec defines the desired state of ApplicationLayer
            properties:
              applicationLayerPolicy:
                description: Application Layer Policy controls whether or not ALP
                  enforcement is enabled for the cluster. When enabled, NetworkPolicies
                  with HTTP Match rules may be defined to opt-in workloads for traffic
                  enforcement on the application layer.
                type: string
              envoy:
                description: User-configurable settings for the Envoy proxy.
                properties:
                  useRemoteAddress:
                    default: false
                    description: If set to true, the Envoy connection manager will
                      use the real remote address of the client connection when determining
                      internal versus external origin and manipulating various headers.
                    type: boolean
                  xffNumTrustedHops:
                    default: 0
                    description: The number of additional ingress proxy hops from
                      the right side of the x-forwarded-for HTTP header to trust when
                      determining the origin clientâ€™s IP address. 0 is permitted,
                      but >=1 is the typical setting.
                    format: int32
                    maximum: 2147483647
                    minimum: 0
                    type: integer
                type: object
              istio:
                description: Istio struct defines the configuration for the Istio
                  service mesh control plane. It controls the installation of Istio
                  using the IstioOperator Custom Resource (CR). This struct specifies
                  the configuration for the IstioOperator CR, which details the settings
                  and options for the Istio installation. Additionally, it includes
                  a Web Application Firewall (WAF) configuration
                properties:
                  profile:
                    description: metav1.TypeMeta   `json:",inline"` metav1.ObjectMeta
                      `json:"metadata,omitempty"` Spec              istiooperator.IstioOperatorSpec
                      `json:"spec"`
                    type: string
                  waf:
                    description: Waf defines the configurations for the Web Application
                      Firewall (WAF) functionality. This includes settings that allow
                      the enablement of WAF functionality for the Istio Ingress Gateway.
                    properties:
                      coreRuleSetsConfigMap:
                        description: CoreRuleSetsConfigMap specifies the name of the
                          Kubernetes ConfigMap containing customized Web Application
                          Firewall (WAF) core rule sets. If users want to customize
                          or add WAF core rule sets, they need to create a Kubernetes
                          ConfigMap and specify its name using this field. The ConfigMap
                          should include the core ruleset files that will be used
                          by Dikastes for executing the WAF functionality. This field
                          is optional, and if not specified, no customized WAF core
                          rule set will be enabled.
                        type: string
                      enabled:
                        description: Enabled is a boolean field that indicates whether
                          the Web Application Firewall (WAF) functionality is enabled
                          or not. When set to true, it allows services to opt-in to
                          have their ingress traffic examined by ModSecurity, thereby
                          enhancing security at the ingress points. By default, this
                          field is false, meaning WAF functionality is not enabled
                          unless explicitly specified.
                        type: boolean
                      listenPort:
                        description: ListenPort specifies the port on which the Web
                          Application Firewall (WAF) listens. This is an optional
                          field. By default, WAF listens on port 5051. If there is
                          a need to run the WAF service on a different port, this
                          field can be configured accordingly. It is important to
                          ensure that no two services are running on the same port
                          to avoid port conflicts.
                        type: integer
                      workloads:
                        description: Workloads is a mandatory field that specifies
                          the list of workloads for which the Web Application Firewall
                          (WAF) needs to be enabled. Each workload is defined by the
                          Workload struct, which includes details such as the name,
                          namespace, context and specific labels for identifying the
                          workload. The WAF functionality will be applied to these
                          specified workloads to enhance their ingress traffic security.
                        items:
                          properties:
                            context:
                              description: Context specifies the context of the EnvoyFilter
                                within the Istio service mesh. The value of this field
                                will always be "gateway" for the Istio Gateway (either
                                ingress or egress) and "sidecar" for Istio workloads.
                                This field is crucial in determining the operational
                                context of the EnvoyFilter, whether it is meant to
                                be applied to traffic flowing through the Istio Gateway
                                or to traffic within the individual Istio workloads
                                (sidecars).
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: Labels specify the workload labels for
                                which the EnvoyFilter is applicable. This field is
                                mandatory; otherwise, the EnvoyFilter will be applied
                                to all workloads within the specified Kubernetes namespace,
                                potentially disrupting the normal functionality of
                                services where the EnvoyFilter's context matches.
                                The ideal way to set this value is by copying the
                                label values from Kubernetes deployment units (such
                                as pods, deployments, daemonsets, or any other Kubernetes
                                building blocks that deploy pods). These labels ensure
                                that the EnvoyFilter is targeted precisely to the
                                intended workloads, based on their label selectors.
                              type: object
                            name:
                              description: Name specifies the name of the EnvoyFilter
                                which will direct the traffic to Dikastes for consulting
                                the Web Application Firewall (WAF) functionality.
                                The tigera-operator will automatically prefix this
                                name with "tigera." and suffix it with ".waf-ext-authz"
                                to signify that it is controlled by Tigera and used
                                for external authorization for WAF. This name should
                                be unique, and an ideal way to construct a name that
                                ensures uniqueness is to follow the pattern "<namespace>.<context>.<application-name>".
                                This naming convention helps in effectively identifying
                                and managing the EnvoyFilters in the context of WAF.
                              type: string
                            namespace:
                              description: Namespace specifies the Kubernetes namespace
                                for which the EnvoyFilter will be applicable. This
                                determines the scope of the EnvoyFilter's effect within
                                the Kubernetes cluster. If the specified namespace
                                is the Istio rootNamespace (i.e., the namespace in
                                which Istio is installed), then the EnvoyFilter becomes
                                a global filter, applying to workloads across all
                                namespaces, provided their labels match the specified
                                criteria.
                              type: string
                          required:
                          - context
                          - labels
                          - name
                          - namespace
                          type: object
                        type: array
                    required:
                    - workloads
                    type: object
                type: object
              logCollection:
                description: Specification for application layer (L7) log collection.
                properties:
                  collectLogs:
                    description: This setting enables or disable log collection. Allowed
                      values are Enabled or Disabled.
                    type: string
                  logIntervalSeconds:
                    description: 'Interval in seconds for sending L7 log information
                      for processing. Default: 5 sec'
                    format: int64
                    type: integer
                  logRequestsPerInterval:
                    description: 'Maximum number of unique L7 logs that are sent LogIntervalSeconds.
                      Adjust this to limit the number of L7 logs sent per LogIntervalSeconds
                      to felix for further processing, use negative number to ignore
                      limits. Default: -1'
                    format: int64
                    type: integer
                type: object
              webApplicationFirewall:
                description: WebApplicationFirewall controls whether or not ModSecurity
                  enforcement is enabled for the cluster. When enabled, Services may
                  opt-in to having ingress traffic examed by ModSecurity.
                type: string
            type: object
          status:
            description: ApplicationLayerStatus defines the observed state of ApplicationLayer
            properties:
              conditions:
                description: Conditions represents the latest observed set of conditions
                  for the component. A component may be one or more of Ready, Progressing,
                  Degraded or other customer types.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                description: State provides user-readable status.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
